{"version":3,"sources":["assets/fonts/Roboto/Roboto-Regular.ttf","assets/fonts/Roboto_Condensed/RobotoCondensed-Bold.ttf","modules/Character/store/reducer.js","store/create-reducer.js","modules/Character/store/action-types.js","services/api/index.js","modules/Character/services/api/index.js","modules/Character/store/selectors.js","modules/Character/styles.js","modules/Character/components/Search/styles.js","modules/Character/components/Search/index.js","modules/Character/components/Card/styles.js","modules/Character/components/Card/index.js","modules/Character/index.js","modules/Character/hooks/useCharacterSelector/index.js","modules/Character/hooks/useCharacter/index.js","modules/Character/store/actions-creators.js","modules/Character/components/SeriesCard/styles.js","modules/Character/components/SeriesCard/index.js","modules/index.js","modules/Character/details.js","store/reducers.js","store/index.js","routes/NotFound/index.js","routes/index.js","styles.js","App.js","index.js"],"names":["module","exports","reduce","initalState","handleActions","state","action","hasOwnProperty","type","createReducer","characters","characterSeries","searchedTerm","loadingCharacters","loadedCharacters","charactersError","details","thumbnail","series","available","stories","events","comics","loadingDetails","detailsError","loadingCharacterSeries","loadedCharacterSeries","hasCharacterSeries","payload","error","term","api","axios","create","baseURL","process","interceptors","request","use","config","params","apikey","Promise","reject","getCharacters","name","a","get","nameStartsWith","response","data","getCharacterById","id","getCharacterSeries","selectCharacters","selectLoadingCharacters","selectLoadedCharacters","selectSearchedTerm","selectCharacterDetails","selectCharacterDetailsThumb","selectLoadingDetails","selectAmountAvailableSeries","selectAmountAvailableComics","selectAmountAvailableStories","selectAmountAvailableEvents","selectLoadingCharacterSeries","selectCharacterSeries","selectLoadedCharacterSeries","Header","styled","header","Title","h1","Characters","ul","Loading","p","Details","section","DetailsSection","ButtonIcon","button","DetailsImage","img","DetailsContent","DetailsTitle","DetailsDescription","DetailsParticipation","SeriesContainer","SeriesTitle","h2","Series","SeriesItem","li","SearchForm","form","Input","input","Button","Search","handleSearch","useState","value","setValue","onSubmit","e","preventDefault","trimmedValue","trim","icon","faSearch","placeholder","onChange","target","data-testid","Card","div","url","memo","character","path","extension","routeProps","component","useSelector","dispatch","useDispatch","load","useCallback","results","useEffect","updateTerm","updateSearchedTerm","useCharacter","history","useHistory","map","key","onClick","push","length","exact","store","reducer","SeriesCard","SeriesCardImage","SeriesCardTitle","serie","src","alt","title","Character","useParams","amountAvailableSeries","amountAvailableComics","amountAvailableStories","amountAvailableEvents","loadSeries","characterId","faAngleLeft","color","description","reducers","modules","combineReducers","createStore","NotFound","location","useLocation","pathname","Routes","basename","GlobalStyle","createGlobalStyle","Roboto","RobotoCondensed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa761652.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","module.exports = __webpack_public_path__ + \"static/media/RobotoCondensed-Bold.cbd4e701.ttf\";","import createReducer from \"../../../store/create-reducer\";\n\nimport {\n  LOAD_CHARACTERS,\n  LOAD_CHARACTERS_SUCCESS,\n  LOAD_CHARACTERS_ERROR,\n  LOAD_CHARACTER_SERIES,\n  LOAD_CHARACTER_SERIES_SUCCESS,\n  UPDATE_SEARCHED_TERM,\n  LOAD_CHARACTER_DETAILS,\n  LOAD_CHARACTER_DETAILS_SUCCESS,\n  LOAD_CHARACTER_DETAILS_ERROR,\n  RESET_DETAILS,\n} from \"./action-types\";\n\nconst initialDetails = () => ({\n  thumbnail: null,\n  series: {\n    available: 0,\n  },\n  stories: {\n    available: 0,\n  },\n  events: {\n    available: 0,\n  },\n  comics: {\n    available: 0,\n  },\n});\n\nconst initialState = () => ({\n  characters: [],\n  characterSeries: [],\n  searchedTerm: \"captain\",\n  loadingCharacters: false,\n  loadedCharacters: false,\n  charactersError: null,\n  details: initialDetails(),\n  loadingDetails: false,\n  detailsError: null,\n  loadingCharacterSeries: false,\n  loadedCharacterSeries: false,\n  hasCharacterSeries: false,\n});\n\nconst reduce = createReducer(initialState(), {\n  [LOAD_CHARACTERS]: (state) => ({\n    ...state,\n    loadingCharacters: true,\n    loadedCharacters: false,\n  }),\n\n  [LOAD_CHARACTERS_SUCCESS]: (state, { payload }) => ({\n    ...state,\n    loadingCharacters: false,\n    loadedCharacters: true,\n    characters: payload,\n  }),\n\n  [LOAD_CHARACTERS_ERROR]: (state, { error }) => ({\n    ...state,\n    loadingCharacters: false,\n    loadedCharacters: false,\n    charactersError: error,\n  }),\n\n  [LOAD_CHARACTER_SERIES]: (state) => ({\n    ...state,\n    loadingCharacterSeries: true,\n    loadedCharacterSeries: false,\n  }),\n\n  [LOAD_CHARACTER_SERIES_SUCCESS]: (state, { payload }) => ({\n    ...state,\n    characterSeries: payload,\n    loadingCharacterSeries: false,\n    loadedCharacterSeries: true,\n  }),\n\n  [UPDATE_SEARCHED_TERM]: (state, { term }) => ({\n    ...state,\n    searchedTerm: term,\n  }),\n\n  [LOAD_CHARACTER_DETAILS]: (state) => ({\n    ...state,\n    loadingDetails: true,\n  }),\n\n  [LOAD_CHARACTER_DETAILS_SUCCESS]: (state, { payload }) => ({\n    ...state,\n    loadingDetails: false,\n    details: payload,\n  }),\n\n  [LOAD_CHARACTER_DETAILS_ERROR]: (state, { error }) => ({\n    ...state,\n    loadingDetails: false,\n    detailsError: error,\n  }),\n\n  [RESET_DETAILS]: (state) => ({\n    ...state,\n    details: initialDetails(),\n    detailsError: null,\n    characterSeries: [],\n    loadedCharacterSeries: false,\n  }),\n});\n\nexport default reduce;\n","const createReducer = (initalState, handleActions) => (\n  state = initalState,\n  action\n) =>\n  handleActions.hasOwnProperty(action.type)\n    ? handleActions[action.type](state, action)\n    : state;\n\nexport default createReducer;\n","export const LOAD_CHARACTERS = \"[Character] load characters\";\n\nexport const LOAD_CHARACTERS_SUCCESS = \"[Character] load characters success\";\n\nexport const LOAD_CHARACTERS_ERROR = \"[Character] load characters error\";\n\nexport const UPDATE_SEARCHED_TERM = \"[Character] update search term\";\n\nexport const LOAD_CHARACTER_DETAILS = \"[Character Details] load\";\n\nexport const LOAD_CHARACTER_DETAILS_SUCCESS =\n  \"[Character Details] load success\";\n\nexport const LOAD_CHARACTER_DETAILS_ERROR = \"[Character Details] load error\";\n\nexport const RESET_DETAILS = \"[Character Details] reset\";\n\nexport const LOAD_CHARACTER_SERIES = \"[Character] load character series\";\n\nexport const LOAD_CHARACTER_SERIES_SUCCESS =\n  \"[Character] load character series success\";\n\nexport const LOAD_CHARACTER_SERIES_ERROR =\n  \"[Character] load character series error\";\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\napi.interceptors.request.use(\n  (config) => {\n    config.params = {\n      ...config.params,\n      apikey: process.env.REACT_APP_API_KEY,\n    };\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api;\n","import api from \"../../../../services/api/\";\n\nexport const getCharacters = async (name) => {\n  const response = await api.get(\"v1/public/characters\", {\n    params: {\n      nameStartsWith: name,\n    },\n  });\n\n  return response.data.data;\n};\n\nexport const getCharacterById = async (id) => {\n  const response = await api.get(`v1/public/characters/${id}`);\n\n  return response.data.data;\n};\n\nexport const getCharacterSeries = async (id) => {\n  const response = await api.get(`v1/public/characters/${id}/series`);\n\n  return response.data.data;\n};\n","export const selectCharacters = (state) => state.characters.characters;\n\nexport const selectLoadingCharacters = (state) =>\n  state.characters.loadingCharacters;\n\nexport const selectLoadedCharacters = (state) =>\n  state.characters.loadedCharacters;\n\nexport const selectSearchedTerm = (state) => state.characters.searchedTerm;\n\nexport const selectCharacterDetails = (state) => state.characters.details;\n\nexport const selectCharacterDetailsThumb = (state) =>\n  state.characters.details.thumbnail;\n\nexport const selectLoadingDetails = (state) => state.characters.loadingDetails;\n\nexport const selectAmountAvailableSeries = (state) =>\n  state.characters.details.series.available;\n\nexport const selectAmountAvailableComics = (state) =>\n  state.characters.details.comics.available;\n\nexport const selectAmountAvailableStories = (state) =>\n  state.characters.details.stories.available;\n\nexport const selectAmountAvailableEvents = (state) =>\n  state.characters.details.events.available;\n\nexport const selectLoadingCharacterSeries = (state) =>\n  state.characters.loadingCharacterSeries;\n\nexport const selectCharacterSeries = (state) =>\n  state.characters.characterSeries;\n\nexport const selectHasCharacterSeries = (state) =>\n  state.characters.details.series.available > 0;\n\nexport const selectLoadedCharacterSeries = (state) =>\n  state.characters.loadedCharacterSeries;\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  margin: 0 10px;\n  padding-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin: 0 20px;\n    padding-top: 20px;\n  }\n\n  @media screen and (min-width: 960px) {\n    margin: 0 30px;\n    padding-top: 30px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: \"RobotoCondensed\";\n  font-size: 3rem;\n  text-transform: uppercase;\n\n  span {\n    color: #f0141e;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 3.5rem;\n  }\n\n  @media screen and (min-width: 960px) {\n    font-size: 5rem;\n  }\n`;\n\nexport const Characters = styled.ul`\n  background: rgba(255, 255, 255, 0.05);\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n  margin: 10px;\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    margin: 15px 20px 20px;\n  }\n\n  @media screen and (min-width: 960px) {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    margin: 15px 30px 30px;\n  }\n`;\nexport const Loading = styled.p`\n  background: rgba(255, 255, 255, 0.05);\n  margin: 10px;\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    margin: 15px 20px;\n  }\n\n  @media screen and (min-width: 960px) {\n    margin: 15px 30px;\n  }\n`;\n\nexport const Details = styled.section`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr;\n    padding: 20px;\n  }\n\n  @media screen and (min-width: 960px) {\n    grid-template-columns: 60px 900px;\n    padding: 30px;\n  }\n`;\n\nexport const DetailsSection = styled.section`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto 1fr;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto 1fr;\n  }\n\n  @media screen and (min-width: 960px) {\n    grid-template-columns: 1fr 400px;\n    grid-template-rows: auto 1fr;\n  }\n`;\n\nexport const ButtonIcon = styled.button`\n  background-color: #f0141e;\n  border: 0;\n  cursor: pointer;\n  font-size: 4.5rem;\n  height: 60px;\n  transition: background-color 0.3s;\n  width: 60px;\n\n  &:hover {\n    background-color: #a70e15;\n  }\n`;\n\nexport const DetailsImage = styled.img`\n  max-width: 100%;\n`;\n\nexport const DetailsContent = styled.section`\n  background-color: #fff;\n  color: #000;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: 30px;\n`;\n\nexport const DetailsTitle = styled.h1`\n  font-size: 2.4rem;\n  text-transform: uppercase;\n`;\n\nexport const DetailsDescription = styled.p`\n  margin-top: 30px;\n`;\n\nexport const DetailsParticipation = styled.p`\n  color: #5e5e5e;\n  margin-top: 30px;\n`;\n\nexport const SeriesContainer = styled.section`\n  @media screen and (min-width: 768px) {\n    grid-area: 2 / 1 / 3 / 3;\n  }\n`;\n\nexport const SeriesTitle = styled.h2`\n  color: #fff;\n  font-size: 1.8rem;\n  margin-top: 50px;\n  text-transform: uppercase;\n`;\n\nexport const Series = styled.ul`\n  columns: 100px 1;\n  column-gap: 10px;\n  margin-top: 10px;\n\n  @media screen and (min-width: 768px) {\n    columns: 100px 4;\n    column-gap: 20px;\n    margin-top: 20px;\n  }\n\n  @media screen and (min-width: 960px) {\n    column-gap: 30px;\n    margin-top: 30px;\n  }\n`;\n\nexport const SeriesItem = styled.li`\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 960px) {\n    margin-bottom: 30px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n  margin: 30px 0 0;\n  position: relative;\n\n  svg {\n    color: rgba(255, 255, 255, 0.2);\n    font-size: 2rem;\n    left: 0;\n    pointer-events: none;\n    position: absolute;\n    top: 15px;\n  }\n`;\n\nexport const Input = styled.input`\n  background-color: transparent;\n  border: 0;\n  border-bottom: 4px solid rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 2.4rem;\n  height: 50px;\n  padding: 0 80px 0 35px;\n  transition: border-color 0.3s;\n  width: 100%;\n\n  &:focus {\n    border-color: rgba(255, 255, 255, 1);\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #f0141e;\n  border: 0;\n  color: #fff;\n  cursor: pointer;\n  font-size: 1.6rem;\n  padding: 10px;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #a70e15;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nimport * as S from \"./styles\";\n\nconst Search = ({ handleSearch }) => {\n  const [value, setValue] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const trimmedValue = value.trim();\n\n    if (trimmedValue) {\n      handleSearch(trimmedValue);\n    }\n  }\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  return (\n    <S.SearchForm onSubmit={handleSubmit}>\n      <FontAwesomeIcon icon={faSearch} />\n      <S.Input\n        placeholder=\"Search\"\n        onChange={handleChange}\n        data-testid=\"search-field\"\n      />\n      <S.Button type=\"submit\" data-testid=\"search-button\">\n        Search\n      </S.Button>\n    </S.SearchForm>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  cursor: pointer;\n  height: 300px;\n  overflow: hidden;\n  position: relative;\n\n  &::before {\n    background: url(${({ url }) => url}) no-repeat center center;\n    background-size: cover;\n    content: \"\";\n    display: block;\n    height: 100%;\n    transition: transform 0.3s ease-in-out;\n    width: 100%;\n  }\n\n  &:hover {\n    &::before {\n      transform: scale(1.2);\n    }\n\n    h2 {\n      padding-bottom: 30px;\n    }\n  }\n\n  h2 {\n    background-color: rgba(0, 0, 0, 0.8);\n    bottom: 0;\n    font-family: \"RobotoCondensed\";\n    font-size: 1.8rem;\n    left: 0;\n    padding: 10px;\n    position: absolute;\n    right: 0;\n    transition: padding-bottom 0.3s ease-in-out;\n  }\n`;\n","import React, { memo } from \"react\";\n\nimport * as S from \"./styles\";\n\nconst Card = ({ character }) => {\n  return (\n    <S.Card\n      url={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n    >\n      <h2>{character.name}</h2>\n    </S.Card>\n  );\n};\n\nexport default memo(Card);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport reducer from \"./store/reducer\";\n\nimport { useCharacter } from \"./hooks/useCharacter/\";\nimport { useCharacterSelector } from \"./hooks/useCharacterSelector/\";\n\nimport * as S from \"./styles\";\n\nimport Search from \"./components/Search\";\nimport Card from \"./components/Card\";\n\nconst Character = () => {\n  const {\n    characters,\n    loadingCharacters,\n    loadedCharacters,\n    searchedTerm,\n  } = useCharacterSelector();\n\n  const { load, updateTerm } = useCharacter(searchedTerm);\n\n  function handleSearch(value) {\n    if (searchedTerm !== value) {\n      updateTerm(value);\n    } else {\n      load(value);\n    }\n  }\n\n  const history = useHistory();\n\n  function openDetails(id) {\n    history.push(`/characters/${id}`);\n  }\n\n  return (\n    <>\n      <S.Header>\n        <S.Title>\n          Marvel <span>Characters</span>\n        </S.Title>\n\n        <Search handleSearch={handleSearch} />\n      </S.Header>\n\n      {!loadingCharacters && loadedCharacters && (\n        <S.Characters data-testid=\"characters-list\">\n          {characters.map((character) => (\n            <li key={character.id} onClick={() => openDetails(character.id)}>\n              <Card character={character} />\n            </li>\n          ))}\n\n          {!characters.length && <li>Empty result</li>}\n        </S.Characters>\n      )}\n\n      {loadingCharacters && !loadedCharacters && (\n        <S.Loading>Loading...</S.Loading>\n      )}\n    </>\n  );\n};\n\nexport default {\n  routeProps: {\n    path: \"/\",\n    component: Character,\n    exact: true,\n  },\n  name: \"Character\",\n  store: {\n    name: \"characters\",\n    reducer,\n  },\n};\n","import { useSelector } from \"react-redux\";\n\nimport {\n  selectCharacters,\n  selectLoadingCharacters,\n  selectLoadedCharacters,\n  selectSearchedTerm,\n} from \"../../store/selectors\";\n\nexport const useCharacterSelector = () => {\n  const characters = useSelector(selectCharacters);\n  const loadingCharacters = useSelector(selectLoadingCharacters);\n  const loadedCharacters = useSelector(selectLoadedCharacters);\n  const searchedTerm = useSelector(selectSearchedTerm);\n\n  return {\n    characters,\n    loadingCharacters,\n    loadedCharacters,\n    searchedTerm,\n  };\n};\n","import { useEffect, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  loadCharacters,\n  loadCharactersSuccess,\n  updateSearchedTerm,\n} from \"../../store/actions-creators\";\n\nimport { getCharacters } from \"../../services/api/\";\n\nexport const useCharacter = (searchedTerm) => {\n  const dispatch = useDispatch();\n\n  const load = useCallback(\n    async (name) => {\n      dispatch(loadCharacters());\n\n      const data = await getCharacters(name);\n\n      dispatch(loadCharactersSuccess(data.results));\n    },\n    [dispatch]\n  );\n\n  const updateTerm = (term) => dispatch(updateSearchedTerm(term));\n\n  useEffect(() => {\n    load(searchedTerm);\n  }, [load, searchedTerm]);\n\n  return {\n    updateTerm,\n    load,\n  };\n};\n","import {\n  LOAD_CHARACTERS,\n  LOAD_CHARACTERS_SUCCESS,\n  LOAD_CHARACTERS_ERROR,\n  UPDATE_SEARCHED_TERM,\n  LOAD_CHARACTER_DETAILS,\n  LOAD_CHARACTER_DETAILS_SUCCESS,\n  LOAD_CHARACTER_DETAILS_ERROR,\n  RESET_DETAILS,\n  LOAD_CHARACTER_SERIES,\n  LOAD_CHARACTER_SERIES_SUCCESS,\n  LOAD_CHARACTER_SERIES_ERROR,\n} from \"./action-types\";\n\nexport const loadCharacters = () => ({\n  type: LOAD_CHARACTERS,\n});\n\nexport const loadCharactersSuccess = (payload) => ({\n  type: LOAD_CHARACTERS_SUCCESS,\n  payload,\n});\n\nexport const loadCharactersError = (error) => ({\n  type: LOAD_CHARACTERS_ERROR,\n  error,\n});\n\nexport const updateSearchedTerm = (term) => ({\n  type: UPDATE_SEARCHED_TERM,\n  term,\n});\n\nexport const loadCharacterDetails = () => ({\n  type: LOAD_CHARACTER_DETAILS,\n});\n\nexport const loadCharacterDetailsSuccess = (payload) => ({\n  type: LOAD_CHARACTER_DETAILS_SUCCESS,\n  payload,\n});\n\nexport const loadCharacterDetailsError = (error) => ({\n  type: LOAD_CHARACTER_DETAILS_ERROR,\n  error,\n});\n\nexport const resetDetails = () => ({\n  type: RESET_DETAILS,\n});\n\nexport const loadCharacterSeries = () => ({\n  type: LOAD_CHARACTER_SERIES,\n});\n\nexport const loadCharacterSeriesSuccess = (payload) => ({\n  type: LOAD_CHARACTER_SERIES_SUCCESS,\n  payload,\n});\n\nexport const loadCharacterSeriesError = (error) => ({\n  type: LOAD_CHARACTER_SERIES_ERROR,\n  error,\n});\n","import styled from \"styled-components\";\n\nexport const SeriesCard = styled.div`\n  background-color: #fff;\n  break-inside: avoid;\n  color: #000;\n  padding-bottom: 20px;\n`;\n\nexport const SeriesCardImage = styled.img`\n  max-width: 100%;\n`;\n\nexport const SeriesCardTitle = styled.h1`\n  font-size: 1.6rem;\n  padding: 20px 20px 0;\n  text-transform: uppercase;\n`;\n","import React from \"react\";\n\nimport * as S from \"./styles\";\n\nconst SeriesCard = ({ serie }) => {\n  return (\n    <S.SeriesCard>\n      <S.SeriesCardImage\n        src={`${serie.thumbnail.path}.${serie.thumbnail.extension}`}\n        alt={serie.thumbnail.title}\n      />\n\n      <S.SeriesCardTitle>{serie.title}</S.SeriesCardTitle>\n    </S.SeriesCard>\n  );\n};\n\nexport default SeriesCard;\n","import Character from \"./Character/\";\nimport CharacterDetails from \"./Character/details\";\n\nexport default [Character, CharacterDetails];\n","import React, { useEffect, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  loadCharacterDetails,\n  loadCharacterDetailsSuccess,\n  loadCharacterSeries,\n  loadCharacterSeriesSuccess,\n  resetDetails,\n} from \"./store/actions-creators\";\n\nimport {\n  selectCharacterDetails,\n  selectCharacterDetailsThumb,\n  selectLoadingDetails,\n  selectAmountAvailableSeries,\n  selectAmountAvailableComics,\n  selectAmountAvailableStories,\n  selectAmountAvailableEvents,\n  selectLoadingCharacterSeries,\n  selectCharacterSeries,\n  selectLoadedCharacterSeries,\n} from \"./store/selectors\";\n\nimport * as S from \"./styles\";\n\nimport SeriesCard from \"./components/SeriesCard/\";\n\nimport { getCharacterById, getCharacterSeries } from \"./services/api/\";\n\nconst CharacterDetails = () => {\n  const { id } = useParams();\n\n  const details = useSelector(selectCharacterDetails);\n  const thumbnail = useSelector(selectCharacterDetailsThumb);\n  const loadingDetails = useSelector(selectLoadingDetails);\n  const amountAvailableSeries = useSelector(selectAmountAvailableSeries);\n  const amountAvailableComics = useSelector(selectAmountAvailableComics);\n  const amountAvailableStories = useSelector(selectAmountAvailableStories);\n  const amountAvailableEvents = useSelector(selectAmountAvailableEvents);\n  const loadingCharacterSeries = useSelector(selectLoadingCharacterSeries);\n  const characterSeries = useSelector(selectCharacterSeries);\n  const loadedCharacterSeries = useSelector(selectLoadedCharacterSeries);\n\n  const dispatch = useDispatch();\n\n  const loadSeries = useCallback(\n    async (characterId) => {\n      dispatch(loadCharacterSeries());\n\n      const data = await getCharacterSeries(characterId);\n\n      dispatch(loadCharacterSeriesSuccess(data.results));\n    },\n    [dispatch]\n  );\n\n  const load = useCallback(\n    async (characterId) => {\n      dispatch(loadCharacterDetails());\n\n      const data = await getCharacterById(characterId);\n\n      dispatch(loadCharacterDetailsSuccess(data.results[0]));\n\n      if (data.results[0].series.available > 0) {\n        loadSeries(id);\n      }\n    },\n    [dispatch, id, loadSeries]\n  );\n\n  useEffect(() => {\n    load(id);\n\n    return () => dispatch(resetDetails());\n  }, [load, id, dispatch]);\n\n  const history = useHistory();\n\n  function goToList() {\n    history.push(\"/\");\n  }\n\n  return (\n    <S.Details>\n      <S.ButtonIcon onClick={goToList}>\n        <FontAwesomeIcon icon={faAngleLeft} color=\"#fff\" />\n      </S.ButtonIcon>\n\n      <S.DetailsSection>\n        <S.DetailsContent>\n          {loadingDetails && <p>Loading...</p>}\n\n          <S.DetailsTitle>{details.name}</S.DetailsTitle>\n\n          <S.DetailsDescription>{details.description}</S.DetailsDescription>\n\n          <S.DetailsParticipation>\n            Series: {amountAvailableSeries} | Comics: {amountAvailableComics} |\n            Stories: {amountAvailableStories} | Events: {amountAvailableEvents}\n          </S.DetailsParticipation>\n        </S.DetailsContent>\n\n        {thumbnail && (\n          <S.DetailsImage\n            src={`${thumbnail.path}.${thumbnail.extension}`}\n            alt={thumbnail.name}\n          />\n        )}\n\n        {loadingCharacterSeries && (\n          <S.SeriesTitle>Loading series...</S.SeriesTitle>\n        )}\n\n        {loadedCharacterSeries && (\n          <S.SeriesContainer>\n            <S.SeriesTitle>Series</S.SeriesTitle>\n\n            <S.Series>\n              {characterSeries.map((serie) => (\n                <S.SeriesItem key={serie.id}>\n                  <SeriesCard serie={serie} />\n                </S.SeriesItem>\n              ))}\n            </S.Series>\n          </S.SeriesContainer>\n        )}\n      </S.DetailsSection>\n    </S.Details>\n  );\n};\n\nexport default {\n  routeProps: {\n    path: \"/characters/:id\",\n    component: CharacterDetails,\n  },\n  name: \"CharacterDetails\",\n};\n","import { combineReducers } from \"redux\";\n\nimport modules from \"../modules/\";\n\nconst reducers = modules.map((module) => {\n  if (module.store) {\n    return {\n      [module.store.name]: module.store.reducer,\n    };\n  }\n\n  return false;\n})[0];\n\nexport default combineReducers(reducers);\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst NotFound = () => {\n  const location = useLocation();\n\n  return <h1>A página {location.pathname} não foi encontrada</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport modules from \"../modules/\";\nimport NotFound from \"./NotFound/\";\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        {modules.map((module) => {\n          return module.hasOwnProperty(\"routeProps\") ? (\n            <Route\n              {...module.routeProps}\n              key={module.name}\n              exact={module.routeProps.exact}\n            />\n          ) : (\n            false\n          );\n        })}\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import { createGlobalStyle } from \"styled-components\";\n\nimport Roboto from \"./assets/fonts/Roboto/Roboto-Regular.ttf\";\nimport RobotoCondensed from \"./assets/fonts/Roboto_Condensed/RobotoCondensed-Bold.ttf\";\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    outline: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  @font-face {\n    font-family: 'Roboto';\n    src: url(${Roboto});\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'RobotoCondensed';\n    src: url(${RobotoCondensed});\n    font-weight: 800;\n    font-style: normal;\n  }\n\n  body {\n    background-color: #000;\n    color: #fff;\n    font-size: 1.6rem;\n  }\n\n  body, input, button {\n    font-family: Roboto, Helvetica, sans-serif;\n  }\n\n  input {\n    border-radius: 0;\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-input-placeholder {\n    color: rgba(255,255,255,0.2);\n  }\n\n  ul {\n    list-style: none;\n  }\n`;\n","import React from \"react\";\n\nimport Routes from \"./routes/\";\nimport * as S from \"./styles\";\n\nfunction App() {\n  return (\n    <>\n      <S.GlobalStyle />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}